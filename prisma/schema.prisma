generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String            @unique
  password     String
  role         UserRole          @default(USER)
  status       UserStatus        @default(ACTIVE)
  profilePhoto String?
  isDeleted    Boolean           @default(false)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  requests     AdoptionRequest[]
}

model Pet {
  id                   String            @id @default(auto()) @map("_id") @db.ObjectId
  userId               String            @db.ObjectId
  name                 String
  species              Species
  breed                String
  age                  Int
  size                 Size
  location             String
  description          String
  temperament          String
  status               petStatus         @default(PENDING)
  medicalHistory       String
  petPhoto             String[]          @default(["https://images.unsplash.com/photo-1592194996308-7b43878e84a6?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"])
  adoptionRequirements String
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  requests             AdoptionRequest[]
}

model AdoptionRequest {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String    @db.ObjectId
  petId                  String    @db.ObjectId
  status                 petStatus @default(PENDING)
  petOwnershipExperience String
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  user                   User      @relation(fields: [userId], references: [id])
  pet                    Pet       @relation(fields: [petId], references: [id])
}

model HelloContact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact")
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum Species {
  DOG
  CAT
  BIRD
  OTHER
}

enum Status {
  ACTIVE
  BLOCKED
  PENDING
}

enum petStatus {
  APPROVED
  PENDING
  REJECTED
}
